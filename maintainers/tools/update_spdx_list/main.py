#!/usr/bin/env python3

"""Tool for updating the list of SPDX licenses."""

import argparse
import json
import os
import sys

from typing import List


def _run(args) -> int:
    lc_all = os.environ.get("LC_ALL")
    if lc_all != "en_US.UTF-8":
        print("Your environment settings will reorder the file badly.")
        print("Please rerun as:")
        print('  LC_ALL="en_US.UTF-8"', " ".join(sys.argv))
        return 0

    with open(args.input) as f:
        licenses = json.load(f)

    with open(args.output, "w") as f:
        f.write(
            f"""
# Generated by maintainers/tools/update_spdx_list/main.py. DO NOT EDIT.
#
# version: {licenses["licenseListVersion"]}

load("//licenses/rules:license_kind.bzl", "license_kind")
""".strip()
        )

        for license in sorted(licenses["licenses"], key=lambda l: l["licenseId"]):
            identifier = license["licenseId"].replace('"', '\\"')
            full_name = license["name"].replace('"', '\\"')

            f.write("\n")
            f.write("\n")
            f.write(
                f"""
license_kind(
    name = "{identifier}",
    full_name = "{full_name}",
    identifier = "{identifier}",
    visibility = ["//visibility:public"],
)
""".strip()
            )

        f.write("\n")

    return 0


def main(argv: List[str]) -> int:
    """Main program.

    Args:
      argv: command-line arguments, such as sys.argv (including the program name
      in argv[0]).

    Returns:
      Zero on successful program termination, non-zero otherwise.
    """

    parser = argparse.ArgumentParser(description="Update SPDX license list.")
    parser.add_argument(
        "--input",
        required=True,
        help="The JSON file containing all SPDX licenses. Download from https://raw.githubusercontent.com/spdx/license-list-data/main/json/licenses.json",
    )
    parser.add_argument(
        "--output", required=True, help="The BUILD file writing targets to."
    )

    return _run(parser.parse_args(argv[1:]))


if __name__ == "__main__":
    sys.exit(main(sys.argv))
